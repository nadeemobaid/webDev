-----------------GIT BASIC--------------------
create new repository in github. To get the repository in your local machine use command : git clone <ssh url>
commands related to checking status or log history : git status  , git log
commands related to the workflow : git add, git commit -m "...." 
command that upload your work to Github repository : git push or git push origin main 
 
 ---------------HTML-BASIC-----------------------
 HyperText Markup Language defines the structure and the content of webpages.
 html comments are not visible to the browser: <!-- blah bla  xnc --> 
 elements and tags.
 paragraphs : <p> ............. </p>
 headings : <h1>.........</h1>  ( h1, h2, ... h6)
 strong ele : <strong>... </strong>
 em ele : <em>... </em>
 unordered lists are created using  <ul> element and each item within the list is created using the list item element <li> 
 ordered list created using <ol> and list item <li>
 links are 2 type - absolute link (other website on internet) and relative link (within our own website). anchor element : <a href="https://www..." target="_blank" rel="noopener noreferrer">... </a> rel attribute is used to describe the relation between the current page and the linked document. noopener = prevents the opemed link from gaining access to the webpage from which it was open. noreferrer = prevents the open link from knowing which webpage or resource has a link to it.
 image : <img src="...path" alt=" desciptionOfImage " > height & width attribute.

---------------CSS-basic------------------------
Universal selector - will selec elements of any type. syntax for it is a simple asterisk *
Type selector - will select all elements of the given element type, syntax is the name of the element.
Class selector - will select all elements with the given class, which is just an attribute you place on an html element. Syntax - a period immendiately followed by the case-senstive vale of the class attribute.
Id selector - similar to class selectors. they select an element with the given ID, use a hastag immediately followed by the case-senstive value of the Id attribute.
Grouping selector - To cut down on the repetition, we can group selectors together as a comma-separated list : .red, .green, .yellow { background: white; }
Chaining selectors - we could chain  the class selectors together in css. ex .subsection.header {...}. this can also be used to chain a class and an Id but you can't chain more than one type of selectors.

FOUR TYPE OF COMBINATOR - combinators allow us to combine multiple selectors differently than either grouping or chaining them, as they show a relationship between  the selectors.
i. Descendant combinator - which is represented in css by a single space between selectors. A descendant combinator will only cause elements that match the last selector to be selected if they also have an ancestor that matches the previous selector.
ii.
iii.
iv.

Properties - color(text color) background-color(background color of element selected ). accept actual name of color, HEX, RGB, HSL 
font-family(font of element) font-size(set the size of font) font-weight(boldness of text)
text-alin(aign text horizontally within element) 
if you want to adjust the size of the image without causing it to lose its proportions, you would use a value of "auto" for the height property and adjust the width value.

ADDING CSS TO HTML : three methods
external css - creating a separate file for css and linking it inside of an html opening and closing <head>. <link rel="stylesheet" href="style.css" />
internal css - or emnedded css involves adding the css within the html file itself. placing all the rules inside of a pair of oening and closing <style> tags, which are then placed inside of the opening and closing <head>tag of html file.
inline css - inline css makes it possible to add styles directly to html elements, though this method isn't recommended. style attribute used 

A Css declaration that is mor especific will take precedence over less specific ones. Inline style have the highest specificity compare to selectors.Id selector (most specific selector) > Class selector > Type selector--Specificity will only be taken inti account when an element has multiple, confilicting declarations targeting it, sort of like a tie-breaker. Special symbols ( * + ~ > and an empty space ) universal selector - combinators, do not have specificity in and of themselves.
INHERITANCE-- Typography-based properties ( color, font-size, font-family, etc.) are usually inherited. The exception to this is when directly targetng an element, as this always beats inheritance. 
Rule order - whichever rule was the last defined is the winner.

